{
  "name": "Generate Comedy Graphics",
  "nodes": [
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "apchapcomputing@gmail.com",
          "mode": "list",
          "cachedResultName": "apchapcomputing@gmail.com"
        },
        "returnAll": true,
        "timeMax": "={{ $now.plus({ week: 4 }) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        208,
        0
      ],
      "id": "6b28bc57-6aa7-4bb6-b50a-ebb3166489e3",
      "name": "Get many events",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "W4Pj8YL42hB1GId0",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "apchapcomputing",
          "mode": "list",
          "cachedResultName": "apchapcomputing",
          "cachedResultUrl": "https://github.com/apchapcomputing"
        },
        "repository": {
          "__rl": true,
          "value": "comedy-graphics",
          "mode": "list",
          "cachedResultName": "comedy-graphics",
          "cachedResultUrl": "https://github.com/apchapcomputing/comedy-graphics"
        },
        "filePath": "data.json",
        "fileContent": "={{  $('Code in JavaScript').item.json.toJsonString() }}",
        "commitMessage": "=update events for  {{ $json.month }}/{{ $json.year }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        848,
        0
      ],
      "id": "a91e280c-6fb6-4f03-92cb-41bdfbaabcae",
      "name": "Edit a file",
      "webhookId": "deef9bb9-ecd2-4366-9fbd-b110de65e5f9",
      "credentials": {
        "githubOAuth2Api": {
          "id": "S9YtR5ScjMlnFXvT",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "content": "```\n{\n    \"month\": \"October\",\n    \"year\": \"2025\",\n    \"shows\": [\n        {\n            \"type\": \"Improv Show\",\n            \"day\": \"Thursday\",\n            \"date\": \"October 2nd\",\n            \"time\": \"7pm\",\n            \"venue\": \"ComedyWorx\",\n            \"city\": \"Raleigh, NC\",\n            \"group\": \"Nerd Lens\",\n            \"logo\": \"comedyworx\"\n        },\n        {\n            \"type\": \"Stand Up Open Mic\",\n            \"day\": \"Friday\",\n            \"date\": \"October 10th\",\n            \"time\": \"8pm\",\n            \"venue\": \"Durty Bull Brewing\",\n            \"city\": \"Durham, NC\",\n            \"logo\": \"durty-bull\"\n        },\n        {\n            \"type\": \"Improv Show\",\n            \"day\": \"Saturday\",\n            \"date\": \"October 4th\",\n            \"time\": \"9pm\",\n            \"venue\": \"ComedyWorx\",\n            \"city\": \"Raleigh, NC\",\n            \"group\": \"Rat People\",\n            \"logo\": \"comedyworx\"\n        }\n    ]\n}\n```"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        592,
        -240
      ],
      "typeVersion": 1,
      "id": "4d6108c8-a83d-400b-bd50-3a9b4f251db9",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ab484f8b-064e-4565-82e3-14ac8f264139",
              "leftValue": "={{ $json.summary }}",
              "rightValue": "Improv Show",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "273fa8d9-d119-4e12-ad4f-3b195956cb9a",
              "leftValue": "={{ $json.summary }}",
              "rightValue": "Stand",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "f78a8947-6476-4e1e-b18a-61b182e71cc2",
              "leftValue": "={{ $json.summary }}",
              "rightValue": "Open Mic",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        416,
        0
      ],
      "id": "33ebf23a-3773-4548-aad9-8cd1a8ddb4f4",
      "name": "Filter for Comedy Events"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst today = new Date();\n\nconst nthNumber = (number) => {\n  if (number > 3 && number < 21) return \"th\";\n  switch (number % 10) {\n    case 1:\n      return \"st\";\n    case 2:\n      return \"nd\";\n    case 3:\n      return \"rd\";\n    default:\n      return \"th\";\n  }\n};\n\nconst shows = items.map((item) => {\n  const type = (() => {\n    const summary = item.json.summary.toLowerCase();\n    if (summary.includes(\"improv show\")) {\n      return \"Improv\";\n    } else if (summary.includes(\"standup\") || summary.includes(\"stand up\") || summary.includes(\"open mic\")) {\n      return \"Standup\";\n    } else if (summary.includes(\"sketch\")) {\n      return \"Sketch\";\n    }\n    return \"\";\n  })();\n\n  const datetime = new Date(item.json.start.dateTime)\n  const month = datetime.toLocaleString(\"default\", { month: \"long\" });\n  const day = datetime.toLocaleString(\"en-US\", {\n    weekday: \"long\",\n    timeZone: $input.first().json.start.timeZone\n  });\n  const date = datetime.toLocaleDateString('en-US', {\n    day: 'numeric',\n    timeZone: $input.first().json.start.timeZone\n  })\n  const fancyDate = month + \" \" + date + nthNumber(date)\n  const time = datetime.toLocaleTimeString('en-US', {\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true,\n    timeZone: $input.first().json.start.timeZone\n  }).replace(':00', ''); // Remove \":00\" for whole hours\n\n  const venue = item.json.location.split(', ')[0];\n  const city = item.json.location.split(' ').slice(-4, -2).join(' ');\n  \n  const group = (() => {\n    if (type.toString().toLowerCase().includes('improv')) {\n      return item.json.summary.split(' ').slice(1, 3).join(' ');\n    }\n  })();\n\n  return {\n    type,\n    day,\n    date: fancyDate,\n    time,\n    venue,\n    city,\n    group\n  };\n});\n\nreturn {\n  json: {\n    // month: month,\n    month: \"October\",\n    year: today.getFullYear().toString(),\n    shows: shows,\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        0
      ],
      "id": "5636ccb9-0cae-4750-982e-b72c86e8da58",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "operation": "urlToImage",
        "url": "https://comedy-graphics.vercel.app",
        "response_format_url": "url"
      },
      "type": "n8n-nodes-htmlcsstoimage.htmlCssToImage",
      "typeVersion": 1,
      "position": [
        1264,
        0
      ],
      "id": "ed58d902-020d-4a2e-9846-3a117c332070",
      "name": "HTML/CSS to Image",
      "credentials": {
        "htmlcsstoimgApi": {
          "id": "sQgZO43Nvh9DK4rY",
          "name": "Htmlcsstoimg account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.image_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1472,
        0
      ],
      "id": "bfc89926-c969-4cd8-bf1b-915b493c7c4d",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "apchapcomputing@gmail.com",
        "subject": "New Comedy Graphic",
        "message": "=Please confirm the comedy events and data for the {{ $('Code in JavaScript').item.json.month }} {{ $('Code in JavaScript').item.json.year }} flyer.\n\nUse this link to access the data: {{ $json.content.html_url }}",
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeAmount": 45,
              "resumeUnit": "minutes"
            }
          }
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1056,
        0
      ],
      "id": "c8c7393d-6fae-4474-8402-c3bc4df74ee0",
      "name": "Send a message",
      "webhookId": "602f4791-0b5a-4e9b-9460-04526a54c40d",
      "credentials": {
        "gmailOAuth2": {
          "id": "89GVzGHOK7ukdUjU",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "weeksInterval": 2,
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "9499400a-36cc-467e-ba41-49e3425c8323",
      "name": "Schedule Trigger"
    }
  ],
  "pinData": {},
  "connections": {
    "Get many events": {
      "main": [
        [
          {
            "node": "Filter for Comedy Events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit a file": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter for Comedy Events": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Edit a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML/CSS to Image": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "HTML/CSS to Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get many events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ddcb0831-1612-4cf1-b34a-677671e1d642",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "dac289e0396bcbd5eb194ebc2b52ee53e2f255b706eb7dd6a16dbca09fcf150c"
  },
  "id": "Q2WwxLUzr1oOOrn8",
  "tags": []
}
